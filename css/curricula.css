/* Curricula Page 📚 - Where future padawans begin their journey */

/* Lesson Plan Links 🔗 */
ul li a { 
    /* This targets unordered lists (🪆<ul>) with list items (🪆<li>) that have links (🪆<a>) inside them. 
    * It's like Russian dolls (Matryoshka dolls) where each element nests inside another:
    * 
    * <ul>                  <!-- The biggest doll: the unordered list -->
    *   <li>               <!-- The middle doll: list item -->
    *     <a>Link!</a>     <!-- The smallest doll: the actual link -->
    *   </li>
    * </ul>
    *
    * When we write 'ul li a' in CSS, we're looking inside the dolls:
    * - First, we open the biggest doll, the <ul>
    * - Then, we open the middle doll, the <li> inside it
    * - Finally, we find the smallest doll, the <a> link inside the <li>

     * So when you see 'ul li a', think: 🪆 → 🪆 → 🪆
    */

    /* Padding in long form (explicit way) - like getting a long ass receipt from CVS 🧾 */
    padding-top: 0.3rem;
    padding-right: 0.625rem;
    padding-bottom: 0.3rem;
    padding-left: 0.625rem;

    /* Same thing but with shorthand! 🪄 like an eco-friendly tweet */
    padding: 0.3rem 0.625rem;

    /* 🤔 "Wait... why are both padding styles uncommented?"
    * 
    * PLOT TWIST: In CSS, when you have the same property declared twice,
    * the last one wins! So that shorthand padding above is actually 
    * overriding our CVS receipt version.
    *
    * Is this efficient? Nope! 
    * Would a linter be crying right now? Absolutely! Because:
    * - It's redundant to declare the same property twice.
    * - This can confuse developers reviewing or maintaining the code.
    * - It increases file size unnecessarily, even if just a tad.
    * - It might hint at a misunderstanding of how CSS cascades or specificity works.

    * Wondering tf is a linter? (It's a tool that checks your code for 
    * errors, style issues, and inefficiencies, like an annoying but 
    * helpful teacher).

    * Is your instructor twitching while purposely leaving inefficient
    * code uncommented? YOU BET! 
    * Are AI assistants everywhere struggling with their perfectionist programming? *nervous beep boops*
    * Are we all doing breathing exercises? Yes, yes we are. 🧘‍♀️
    *
    * Consider this your introduction to CSS specificity... and why caring
    * about quality code is a shared struggle among linters,
    * instructors, and AI assistants alike 😅
    *
    */
}

/* Lesson Plan Hover Effect ✨ This only applies when someone hovers over the link */
ul li a:hover {
    background-color: var(--primary-color);   /* Changes background color on hover */
    color: white;   /* Changes text to white on hover */
    transform: translateX(0.3rem);   /* Slides the link right by 0.3rem on hover */
}