/*
  👩‍🏫👨‍🏫 Lesson-styles.css - The stylesheet for lesson plan pages.
  This file defines the styles that apply specifically
  to the lesson plan pages of eOS Lesson Plans.

  Table of Contents:
    1. Lesson Styles   - Structure and spacing for lesson plan pages
*/

/*
  1. Lesson Styles
    .lesson-container { ... }
    .lesson-container img { ... } 
    .lesson-container h2 { ... }
    .lesson-container main {...}
    .lesson-container ol {...}
*/

/*
  Lesson plan pages
  The .lesson-container holds the content for the lesson plan pages.
  It controls the width and spacing of the content area.
  Order of Properties: Space it (Sp)
*/
.lesson-container {
  /* --- Space It --- */

  /*
    This doubles the space between text lines (32px for a 16px font).
  */
  line-height: 2;
}

/*
  📸 Image Styling
  This styles the space-themed image at the top of the lesson page - a kid-friendly
  scene of planets and stars (space.jpeg) created with Apple’s Image Playground.
  It’s got Magic School Bus vibes to kick off the learning adventure 🚀
  These rules make it responsive, centered, and spaced out for a clean start.
  Order of Properties: Size it, Space it (Sz Sp)
*/
.lesson-container img {
  /* --- Size It --- */

  /*
    max-width caps the image width at 100% of its container (the .lesson-page area).
    So, if the page shrinks (like on a phone), the image shrinks too.
    It’s like saying, “Stay in your lane, image!” 🚧
  */
  max-width: 100%;

  /*
    block makes the image take up its own line, like a standalone element.
    It’s like giving the spaceship its own parking spot. 🛸
  */
  display: block;

  /* --- Space It --- */

  /*
    ⬆️ Top margin = 0px. No space above the image.
    ⬅️➡️ Left and right margins = auto, which splits the leftover
    space equally on both sides, centering the image horizontally.
    ⬇️ Bottom margin = 1.25rem. Adds space below the image.
    (20px ÷ 16px = 1.25rem)
  */
  margin: 0 auto 1.25rem;
}

/*
  Page Heading
  Order of Properties: Style it (St)
*/
.lesson-container h1 {
  /* --- Style It --- */

  /*
    Sets the color property with a CSS variable (--header-text-color, from global.css).
      - Princeton orange in dark mode, switches to chefchaouen blue in light mode.
  */
  color: var(--header-text-color);
}

/*
  🧭 Subheadings to navigate the lesson plan
  Order of Properties: Space it, Style it (Sp St)
*/
.lesson-container h2 {
  /* --- Space It --- */

  /* 
    Adds space below the subheading.
    🧮 Here's the math:
      - 0.3rem × 16px = 4.8px
  */
  margin-bottom: 0.3rem;

  /* --- Style It --- */

  /*
    Sets the color property with a CSS variable (--subheader-text-color, from global.css).
      - Peach in dark mode, switches to lapis lazuli in light mode.
  */
  color: var(--subheader-text-color);
}

/*
  🏹 Targets subheadings
  Order of Properties: Space it (Sp)
*/
.lesson-container h2 span {
  /* --- Space It --- */

  /* Underline only the text, not the emoji */
  text-decoration: underline;
}

/*
  📖 Main Content HQ - getting to the good stuff.
  .lesson-container main targets the <main> element within the
  container, controlling layout stuff like width, flex, 
  margin, and padding behavior.
  Order of Properties: Size it, Space it (Sz Sp)
*/
.lesson-container main {
  /* --- Size It --- */

  /*
    max-width: 80vw sets the maximum width to 80% of the viewport width.
    This limits how wide the container can grow.
  */
  max-width: 80vw;

  /* --- Space It --- */

  /*
    Space outside container ⬆️⬇️⬅️➡️
    Using two values:
    0 = top and bottom margins (no space above or below).
    auto = left and right margins (splits remaining space to center container).
  */
  margin: 0 auto;

  /*
    Space inside container ⬆️⬇️➡️⬅️
    0 = top and bottom padding (no extra height).
    1.25rem = left and right padding (20px at 16px root font size).
    Rem = “root em,” based on the <html> font size (usually 16 px by default).
    🧮 If default font size is 16px: 16 × 1.25 = 20px padding.

    Why use rem here? It’s responsive — padding scales with browser font size changes,
    keeping the content balanced across different screens and settings.
  */
  padding: 0 1.25rem;
}

/*
  🎯 Lesson goals list
  The .lesson-container ol styles the ordered list (<ol>) inside the lesson container.
  This is where lesson goals live, formatted as a numbered list for easy navigation.
  Order of Properties: Space it
*/
.lesson-container ol {
  /* --- Space It --- */

  /*
    Padding-left adds 3.5rem of space *inside* the list, on the left side only.
    This pushes the bullets and text rightward, away from the left edge.

    🧮 Here’s the math:
      - 1rem = the root font size (default is 16px in browsers).
      - So, 3.5rem = 3.5 × 16px = 56px of space.
      - If the root font size changes (e.g., to 18px), 3.5rem becomes 63px.

    Why rem? It scales spacing with font size for a consistent look -
    think of it as giving the list a little elbow room on the left.
  */
  padding-left: 3.5rem;
}

/* Mission Checklist Format 📝 (aka lists for step-by-step instructions) */
.lesson-content ul {
    /* Display & Positioning - how it fits in space */
    display: block;   /* Vertical stack formation (default) */
    
    /* Box Model - the spacecraft's dimensions */
    max-width: 80vw;
    padding-left: 2.5rem;
    margin: 0 0 1rem 0;
    
    /* Visual Properties - make it look stellar */
    list-style-position: outside;   /* keeps numbers neatly aligned */
}

/* Mission Crew 🧑‍🚀 (aka list items) */
.lesson-content li {
    /* Typography */
    font-size: 1.125rem;
    
    /* Box Model */
    margin-bottom: 1rem;   /* provides breathing space between crew members */
}

/* Sub-missions 🛸 (aka nested lists) */
.lesson-content li > ul {
    /* Box Model - Docking Position */
    padding-left: 1.875rem;   /* navigation clearance for nested missions */
    margin-top: 0.5rem;   /* creates hierarchy in mission structure */
}
