/*
  🌎 Global.css - The central stylesheet for the website.
  This file defines the core styles (like colors, fonts, and layouts)
  that apply across all pages, keeping the design consistent and easy to update.

  Table of Contents:
  1. Resets        - Wipe browser defaults
  2. Variables     - Define colors and themes
  3. Base Styles   - Core layout and typography
  4. Components    - Nav, footer, and toggle styles
  5. Behaviors     - Interactive states
*/

/* 1. Resets
  * { ... }
*/

/*
  Reset - Removes default browser styles.
  Sets all elements to start with a clean base for predictable design.

  Every single thing on the page is an element (like text or buttons).
  Every element has space around it — this is called margin.
  Every element has space inside it — this is called padding.

  Order of Properties: Size it, Space it (SS)
*/
* {
  /*
    The little asterisk (*) is a CSS superhero! 🦸‍♀️🦸 It targets EVERYTHING on the page -
    every tag, every button, every speck of text.
    Here, we’re using it to wipe out browser defaults and take control.
    Think of it as clearing the stage before the dancers (your content) perform!
  */

  /* --- Size It --- */

  /*
    By default, browsers use content-box, where padding and borders
    add to an element’s width or height, which can screw up layouts.

    With border-box, the width and height you set include padding and borders,
    making your life way easier when designing.

    It’s like telling the browser, “No, I decide what fits where.”
  */
  box-sizing: border-box;

  /* --- Space It --- */

  /* Setting these to 0 removes any space added to the elements by the browser. */
  margin: 0;
  padding: 0;
}

/* 2. Variables
  :root { ... }
  .light-theme { ... }
*/

/*
  Root - a CSS selector targeting the <html> element, the top of your webpage.
  It holds custom properties (aka variables) like colors, fonts, and spacing,
  making them reusable everywhere. Your site’s toolbox. 🧰
*/
:root {
  /*
    Core color palette 🎨 to splash some happy little colors on our canvas.

    You'll see below that each color in our palette gets its own little ID — a code that
    tells the browser what shade to use. This is called a hex code.
    Think of it as a color’s secret ID 🕵️‍♀️ A 6-digit code starting with # (like #4A90E2)
    mixes red, green, and blue (RGB) — two digits each: RRGGBB. You want pure black? #000000.
    Pure white? #FFFFFF. It’s how we talk color to computers.

    🌈 Play with https://coolors.co/ to brainstorm colors for your project.
  */

  /*
    Primary color: Deep Skyler is a rich, dark blackish-blue color.
    😎 Context: The hex code (#0D1B2A) doesn’t have a standard name, so gave it a personal touch -
    my last name, ‘Schuyler’ (pronounced like ‘Skyler’). The name is a play on:
      - It's dark, almost-black blue vibe, fitting for a dark mode design.
      - A nod to the recent LLM DeepSeek, tying it to tech innovation.
      - No color police here — when a color doesn't have a name, you can just name it!

    ✨ Note: This color offers strong contrast (~10:1 with Muad'Dib #C9C2BA) for
    accessibility in dark mode, reducing eye strain in low-light environments. It meets
    WCAG Level AAA standards (7:1 for normal text), ensuring top-tier readability.
    Pro tip: If you ever need to verify color contrast ratios, AI assistants
    can help with the complex WCAG calculations.
    Check your own contrast at https://webaim.org/resources/contrastchecker/.
  */
  --deep-skyler: #0D1B2A;

  /*
    Secondary color: British racing green.
    😎 Context: A nod to the iconic shade of British motorsport, famously splashed across roaring
    Bentleys and sleek MGs — like the one my dad drove before he flipped it to red.
  */
  --british-racing-green: #004225;

  /*
    Background color: Lapis lazuli — a deep, rich blue color.
    😎 Fun Fact: Historically, lapis lazuli was ground into a pigment known as ultramarine,
    used by Renaissance artists for its vibrant blue hue.

    ✨ Note: This color offers sufficient contrast (~7:1 with White #FFFFFF) for
    accessibility in dark mode, reducing eye strain in low-light environments. It meets
    WCAG Level AAA standards (7:1 for normal text), ensuring top-tier readability.
    Pro tip: If you ever need to verify color contrast ratios, AI assistants
    can help with the complex WCAG calculations.
    Check your own contrast at https://webaim.org/resources/contrastchecker/.
  */
  --lapis-lazuli: #2D5A8E;

  /*
    Text color: Pure white - a bright, clean text shade.
    😎 Context: Inspired by fresh snow on the mountains of Maine, it’s the ultimate contrast 
    against our lapis lazuli and chefchaouen blues.

    We use #FFF here instead of #FFFFFF ‘cause they’re the same color -
    linter likes the shorter version, less typing!
  */
  --white: #FFF;

  /*
    Contrast text color: Muad'Dib — a warm, earthy gray inspired by the desert mouse of Dune.
    😎 Context: "The mystery of life isn't a problem to solve, but a reality to experience."
    — Reverend Mother Gaius Helen Mohiam, Dune by Frank Herbert.
  */
  --muad-dib: #C9C2BA;

  /*
    Dark mode as default 🌑 — why it’s the base:

    Dark mode cuts glare and reduces eye strain 👀, making screens less of a
    punch to the retinas when you’re staring at code (or memes) for hours.
    It’s a game changer for some, calming overstimulated senses and boosting focus.
    Plus, it’s easier on eyes in dim rooms and might save battery on OLED screens.
    (Think iPhone X or later 📱 — all OLED.)

    This is the core palette, with light mode as the toggleable remix.
  */

  /* Light Theme Overrides 🌞 */

  /* 
    Primary color: Chefchaouen blue - a vibrant blue that pops off the page.
    😎 Context: Inspired by the blue-washed streets of Chefchaouen, Morocco. 
  */
  --chefchaouen-blue: #3A80D2;

  /*
    Secondary color: Emerald green for accents.
    😎 Context: Inspired by The Wizard of Oz's Emerald City.
  */
  --emerald-green: #50C878;

  /* 
    Background color: Anti-flash white for a soft, clean background on the page.
    😎 Fun Fact: This color is used on military aircraft to reflect thermal radiation from nuclear explosions. 
  */
  --anti-flash-white: #F5F7FA;

  /* 
    Text color: Charcoal has a dark and muted tone, providing good contrast on light backgrounds for readability.
    😎 Fun Fact: Charcoal is one of the oldest known art materials. Archaeologists have found charcoal drawings
    in caves dating back over 30,000 years, like those in Chauvet Cave in France.
  */
  --charcoal: #2C3E50;

  /*
    Theme-Agnostic Variables 🎭

    These are the “middlemen” that decide which palette — dark or light — gets used.

    They’re like the director of a play, telling the actors (your styles) which
    costume (color) to wear based on the scene (theme). Default to dark mode
    here, and the .light-theme class will swap them to the light palette later.
  */
  --primary-color: var(--deep-skyler);
  --secondary-color: var(--british-racing-green);
  --background-color: var(--lapis-lazuli);
  --text-color: var(--white);
  --accent-text-color: var(--muad-dib);
}

/* Light Theme Variables 🌞 */

/* 
  Disable lint rule 'no-descending-specificity' bc we’re nesting h1 inside .light-theme
  to override the base h1 color (var(--text-color)) with Chefchaouen blue (#3A80D2) in light mode only.
  Left disabled for the file since base h1 rule follows, avoiding re-triggered warnings.
*/
/* stylelint-disable no-descending-specificity */
.light-theme {
  --primary-color: var(--chefchaouen-blue);
  --secondary-color: var(--emerald-green);
  --background-color: var(--anti-flash-white);
  --text-color: var(--charcoal);
  --accent-text-color: var(--white);

  /* Set h1 to Chefchaouen blue (#3A80D2) in light mode for a Moroccan pop. */
  h1 {
    color: var(--chefchaouen-blue);
  }
}

/* 3. Base Styles
  body { ... }
  h1 { ... }
  h2 { ... }
*/

/*
  Body - The main content wrapper. Sets the stage for fonts and layout.
  Order of Properties: Size it, Style it (SS)
*/
body {
  /* --- Size It --- */

  /*
    Flex lets body control its contents (like nav, main, or footer) in a flexible way. 
    Without this, everything inside body would stack vertically ('block' display).
  */
  display: flex;

  /*
    Sets the body box to at least the browser window’s height. 
    vh stands for “viewport height,” and 100vh means “100% of the window’s height.”
  */
  min-height: 100vh;

  /*
    Flex - Stacks body's contents (like nav, main, footer) top-to-bottom in a flex container. 
    Unlike block stacking, flex lets them stretch to fill body's height (footer stays down!).
  */
  flex-direction: column;

  /* --- Style It --- */

  /*
    Typography: Font family cascade: Space Grotesk → system-ui → sans-serif.
    Bc who needs normal fonts when you could have cosmic vibes? 🧑‍🚀
  */
  font-family: 'Space Grotesk', system-ui, sans-serif;

  /* Sets text color for all pages using an agnostic variable (white or charcoal, based on dark/light mode). */
  color: var(--text-color);

  /* Sets background color for all pages using an agnostic variable (lapis lazuli or anti-flash-white, based on dark/light mode). */
  background-color: var(--background-color);
}

/* 
  Main Page Heading
  Order of Properties: Size it, Space it, Style it (SSS)
 */
 h1 {
  /* --- Size It --- */

  /* 
    Sets heading to 2.5rem (40px at default 16px root font size).
    Typical h1 range is 2rem–3.5rem (32px–56px), balancing prominence and readability.
  */
  font-size: 2.5rem;

  /* --- Space It --- */

  /* 
    Adds space below the heading (1.618rem ≈ 26px) using the golden ratio
    for aesthetic harmony (and bc 6/18 is my bday 😎).
  */
  margin-bottom: 1.618rem;

  /* --- Style It --- */

  /* 
    If Righteous font isn't ready for takeoff,
    use our trusty Space Grotesk font backup crew.

    We are using quotes around 'Space Grotesk' bc it’s a multi-word font name, 
    unlike single-word Righteous, system-ui or sans-serif.
  */
  font-family: Righteous, 'Space Grotesk', system-ui, sans-serif;

  /* 
    Sets text color using our theme-agnostic primary hue
    (white in dark mode, charcoal in light mode).
  */
  color: var(--text-color);

  /* Centers the heading text. */ 
  text-align: center;
}

/* 
  Page Subheading
  Order of Properties: Size it, Space it, Style it (SSS)
*/
h2 {
  /* --- Size It --- */

  /* 
    Sets subheading to 1.5rem (24px at default 16px root font size).
    Typical h2 range is 1.25rem–2rem (20px–32px), keeping it bold but smaller than h1.
  */
  font-size: 1.5rem;

  /* --- Space It --- */

  /* Adds 1rem (16px) space above and below for breathing room between sections. */
  margin-top: 1rem;
  margin-bottom: 1rem;

  /* --- Style It --- */

  /* 
    Sets boldness to 700 (bold) for strong visual hierarchy—thicker than normal (400)
    but not as heavy as extra-bold (900).
  */
  font-weight: 700;

  /* (white in dark mode, charcoal in light mode). */
  color: var(--text-color);
}

/*
  Mobile Typography Adjustments
  Scales down h1 on smaller screens for better readability.
  Order of Properties: Size it (S)
*/
@media (width <= 768px) {
  /* --- Size It --- */

  /* Reduces h1 to 2rem (32px) on screens 768px wide or smaller */
  h1 {
    font-size: 2rem;
  }
}

/* 4. Components
  nav { ... }
  footer { ... }
  #sun-moon-toggle { ... }
*/

/* 
  Navigation Control Center 🎮 (aka page navigation bar)
  Order of Properties: Size it, Space it, Style it (SSS)
*/
nav {
  /* --- Size It --- */

  /* Spans the full width of the page */
  width: 100%;

  /* --- Space It --- */

  /* 
    Padding affects the space inside the nav bar on the page.
    Crank it to 5rem, and you’ll see extra space above and below the text.

    Rem? It’s short for “root em.” Basically, it’s tied to the <html> font size
    (usually 16px by default). So 1rem = 16px, 5rem = 80px. Easy math! 🧮

    Why use rem here? It’s responsive—padding scales with browser font size changes,
    keeping the nav balanced across different screens and settings.
  */
  padding: 1rem;

  /* --- Style It --- */

  /* (muad-dib in dark mode, white in light mode). */
  color: var(--accent-text-color);

  /* (deep-skyler in dark mode, chefchaouen-blue in light mode). */
  background-color: var(--primary-color);

  /* 
    Centers the nav’s text smack in the middle.
    Other options? Try ‘left’ to hug the start, or ‘right’ to push it to the end.
  */  
  text-align: center;
}

/*
  Navigation Links 🔗 (links within the nav bar)
  Order of Properties: Space it, Style it (SS)
*/
nav a {
  /* --- Space It --- */

  /* 
    Space between nav links ⬅️➡️
    - margin-left and margin-right set 0.3rem spacing explicitly for left and right,
      ensuring older browsers keep links nicely spaced side to side.
    - margin-inline is the modern way, applying 0.3rem to the inline axis (left/right),
      overriding the above in newer browsers.

    Using all three as a fallback bc some ppl still rock vintage browsers 🤘
  */
  margin-left: 0.3rem;
  margin-right: 0.3rem;
  margin-inline: 0.3rem;

  /*
    Space inside links ⬆️⬇️➡️⬅️
    When you use two numbers, CSS assumes symmetry:
    First number = top and bottom padding.
    Second number = right and left padding.
   */
  padding: 0.5rem 1rem;
  
  /* --- Style It --- */

  /* (muad-dib in dark mode, white in light mode). */
  color: var(--accent-text-color);

  /* Links are not underlined */
  text-decoration: none;

  /* Rounds link corners, noticeable when hovering links  */
  border-radius: 0.3rem;

  /* Smooth hover effect */
  transition: background-color 0.3s;
}

/* Navigation Hover Effect */
nav a:hover {
  /* (british-racing-green in dark mode, emerald-green in light mode). */
  background-color: var(--secondary-color);
}

/* 
  Sun/Moon Light/Dark Mode Toggle 🌞🌙
  Order of Properties: Size it, Space it, Style it (SSS)
*/
#sun-moon-toggle {
  /* --- Size It --- */

  /*
    “em” = stretchy size tied to parent’s font size. Here's how it works: 
    parent size x em = your toggle size
    (16px parent × 1.2em = 19.2px toggle)

    😎 Context: "em" gets its name from typography, where it was traditionally based on 
    the width of a capital "M". Typesetters have used this unit for centuries, from 
    metal type printing to modern web design.

    Why use em here instead of px? By using em, the toggle will automatically scale if the parent
    element's font size changes, maintaining proportional sizing. Pixels (px) won't automatically
    adjust when parent font sizes change.
  */
  font-size: 1.2em;

  /* --- Space It --- */

  /* Adds a cushion inside the sun/moon toggle */
  padding: 0.5rem;

  /* --- Style It --- */

  /* Wipes out any background, so the toggle emoji blends in with the nav bar. */
  background: none;

  /* Removes the border; uncomment to see the toggle’s padding and margin during design. */
  border: none;

  /* Turns the cursor into a hand to show it’s clickable; try ‘grab’ or ‘crosshair’ for a twist! */
  cursor: pointer;

  /* 
    Sets the speed (0.3 seconds) and transition style (ease, which is a smooth transition)
    for how the toggle emoji grows when hovering over it.
  */
  transition: transform 0.3s ease;
}

/* 
  Hover: Sun/Moon Toggle 🌞🌙
  Grows the emoji to 1.2x size (20% bigger), scaled evenly from the center.
*/
#sun-moon-toggle:hover {
    transform: scale(1.2);
}

/* 
  Footer Styling 🐾
  Order of Properties: Size it, Space it, Style it (SSS)
*/
footer {
  /* --- Size It --- */

  /* Spans the full width of the page. */
  width: 100%;

  /*
    👽 Outsider art: Defiantly larger footer text bc
    footer content deserves the same respect as any other content.
    Convention says make it smaller (0.8rem–1rem), but we’re boosting 
    it to 1.25rem (20px at 16px root). Making it seen and challenging the norm.
  */
  font-size: 1.25rem;

  /* --- Space It --- */

  /* Adds a cushion inside the footer. */
  padding: 1rem;

/*
    Pushes the footer to the bottom of the page in a flex body;
    margin-top: auto eats up all the available space above it,
    pinning the footer down and making it stick to the bottom of the page

    For this to work, the following must be set in body: 
    - display: flex
    - min-height: 100vh
    - flex-direction: column
  */
  margin-top: auto;

  /* --- Style It --- */

  /*
    Text color uses the accent shade
    (muad-dib in dark, white in light mode).
  */
  color: var(--accent-text-color);

  /*
    Background color pulls from our theme-agnostic primary hue
    (deep-skyler in dark mode, chefchaouen-blue in light mode).
  */
  background-color: var(--primary-color);

  /* Centers the footer text. */
  text-align: center;
}

/* 5. Behaviors 
   - Color transitions
*/

/* 
  Smooth Theme Transitions
  Change colors smoothly over 0.3s for body, h1, nav, and footer
  when toggling the dark/light mode button.
*/
body, h1, nav, footer {
  transition: background-color 0.3s, color 0.3s;
}

/*
Global.css
├── 1. Resets
│   └── * (Reset All Elements)
│       ├── Size It
│       │   └── box-sizing
│       └── Space It
│           ├── margin
│           └── padding
├── 2. Variables
│   ├── :root (Dark Mode Default)
│   │   ├── --primary-color: var(--deep-skyler)
│   │   ├── --secondary-color: var(--british-racing-green)
│   │   ├── --background-color: var(--lapis-lazuli)
│   │   ├── --text-color: var(--white)
│   │   └── --accent-text-color: var(--muad-dib)
│   └── .light-theme (Light Mode Overrides)
│       ├── --primary-color: var(--chefchaouen-blue)
│       ├── --secondary-color: var(--emerald-green)
│       ├── --background-color: var(--anti-flash-white)
│       ├── --text-color: var(--charcoal)
│       └── --accent-text-color: var(--white)
├── 3. Base Styles
│   ├── body
│   │   ├── Size It
│   │   │   ├── display
│   │   │   ├── min-height
│   │   │   └── flex-direction
│   │   └── Style It
│   │       ├── font-family
│   │       ├── color
│   │       └── background-color
│   ├── h1
│   │   ├── Size It
│   │   │   └── font-size
│   │   ├── Space It
│   │   │   └── margin-bottom
│   │   └── Style It
│   │       ├── font-family
│   │       ├── color
│   │       └── text-align
│   └── h2
│       ├── Size It
│       │   └── font-size
│       ├── Space It
│       │   ├── margin-top
│       │   └── margin-bottom
│       └── Style It
│           ├── font-weight
│           └── color
├── 4. Components
│   ├── nav
│   │   ├── Size It
│   │   │   └── width
│   │   ├── Space It
│   │   │   └── padding
│   │   └── Style It
│   │       ├── color
│   │       ├── background-color
│   │       └── text-align
│   ├── nav a
│   │   ├── Space It
│   │   │   ├── margin-left
│   │   │   ├── margin-right
│   │   │   ├── margin-inline
│   │   │   └── padding
│   │   └── Style It
│   │       ├── color
│   │       ├── text-decoration
│   │       ├── border-radius
│   │       └── transition
│   ├── #sun-moon-toggle
│   │   ├── Size It
│   │   │   └── font-size
│   │   ├── Space It
│   │   │   └── padding
│   │   └── Style It
│   │       ├── background
│   │       ├── border
│   │       ├── cursor
│   │       └── transition
│   └── footer
│       ├── Size It
│       │   ├── width
│       │   └── font-size
│       ├── Space It
│       │   ├── padding
│       │   └── margin-top
│       └── Style It
│           ├── color
│           ├── background-color
│           └── text-align
└── 5. Behaviors
    └── body, h1, nav, footer
        └── transition
*/
