/*
  🏡 Index.css - The stylesheet for the home page.
  This file defines the styles that apply specifically 
  to the home of eOS Lesson Plans.
*/

/*
  Home Styles
    .home-container { ... }
    .home-container h1 { ... }
    .home-container p { ... }
    .home-container img { ... }
  
  Touch Styles
  .home-container { ... }
*/

/*
  The .home-container holds the content for the home page.
  It controls the width and spacing of the content area.
  Order of Properties: Size It, Space It, Style It (Sz Sp St)
*/
.home-container {
  /* --- Size It --- */

  /* 
    max-width: 80vw sets the maximum width to 80% of the viewport width.
    This limits how wide the container can grow.
  */
  max-width: 80vw;

  /* --- Space It --- */

  /*
    Space outside container ⬆️⬇️⬅️➡️
    Using two values:
    0 = top and bottom margins (no space above or below).
    auto = left and right margins (splits remaining space to center container).
  */
  margin: 0 auto;

  /*
    Space inside container ⬆️⬇️➡️⬅️
    Rem = “root em,” based on the <html> font size (usually 16 px by default).
    So, 1rem = 16px, 2rem = 32px. Simple math! 🧮
    2rem applies to all sides (top, right, bottom, left).

    Why use rem here? It’s responsive—padding scales with browser font size changes,
    keeping the nav balanced across different screens and settings.
  */
  padding: 2rem;

  /* --- Style It --- */

  /*
    Moves the text to the middle of the container.
    This changes how the text is positioned horizontally.
  */
  text-align: center;
}

/*
  Page Heading
  Order of Properties: Style It (St)
*/
.home-container h1 {
  /* --- Style It --- */

  /*
    Sets the color property with a CSS variable (--header-text-color, from global.css).
      - Grogu green in dark mode, switches to ruby red in light mode.
  */
  color: var(--tori-header-color);
}

/*
  This styles paragraph text (<p> tags) inside the .home-container.
  Order of Properties:  Space It (Sp)
*/
.home-container p {
  /* --- Space It --- */

  /*
    line-height: 1.6 sets text line spacing to 1.6 times the font size.
    This improves readability by giving lines some breathing room.
    🧮 Here's the math:
      - 1.6 × 16px = 25.6px (at a 16px default root).
    
    📐 Why is there no unit of measurement here for 1.6 like rem or px?

    Great question! Unitless values are standard for line-height in modern CSS
    because they adapt better than fixed units.

    🍭 1.6 is in the sweet spot between too cramped (< 1.5) and too spacious (> 2.0).
  */
  line-height: 1.6;

  /* Adds space between the header and paragraph */
  margin-top: 1.5rem;

  /* Adds space between the image and paragraph */
  margin-bottom: 2rem;
}

/*
  🐳 Image styles for van Gogh orca
  Order of Properties: Size it, Space it, Style it (Sz Sp St)
*/
.home-container img {
  /* --- Size It --- */

  /* 
    Ensures the image doesn’t exceed the container’s width, which is 80 viewport width
    (vw, or 80% of the browser window’s width) set in .home-container.
  */
  max-width: 100%;

  /* 
    Maintains aspect ratio (aka it keeps the image’s shape normal - not stretched or squished)

    ✨ Most modern browsers automatically apply height: auto to images if 
    you don’t specify a height. This is called the "intrinsic aspect ratio."
    We're adding this here for safe measure for older browsers or weird quirks.
  */
  height: auto;

  /* --- Space It --- */

  /*
    Space outside the image ⬆️⬇️⬅️➡️
    Using two values:
    1rem = top and bottom margins (adds 1 rem/16px above and below for breathing room).
    auto = left and right margins (splits remaining space to center the image).
    ✨ This extra space ensures the image doesn’t feel cramped against the paragraph or footer.
  */
  margin: 1rem auto;

  /* --- Style It --- */

  /*
    Default styling for images is inline-block. We are setting it here to a block element.

    🤔 Why tho?
      - Ensures the image starts on a new line and takes the full available width (up to max-width).
      - Works with text-align: center (from .home-container) and margin: auto to center the image,
        keeping it aligned with the centered text above.
      - Removes inline-block quirks, like extra spacing below the image from the text baseline.
      ✨ Explicitly setting this (even if not strictly required) clarifies our intent for centering
      and is a best practice for predictable layouts, especially in an educational site like eOS Lesson Plans.
  */
  display: block;

  /* 
    💫 Adds a lil curve to the edges of the image

    btw: most CSS devs use px for border-radius because it’s a fixed visual effect.
  */
  border-radius: 8px;
}

/*
  Home Container Touch Styles
  Order of Properties: Size It (Sz)

  📲 The 768px width is widely used because it aligns with the typical screen size
  of tablets in portrait mode, like the iPad (which has a resolution of 768px wide
  at 1x pixel density). It’s become a convention in responsive design to mark the
  transition between "mobile" and "tablet" layouts.
*/
@media (width <= 768px) {
  .home-container {
    /* --- Size It --- */

    /*
      max-width: 100vw sets the maximum width to 100% of the viewport width.
      Increased from 80vw to 100vw to enhance text and image size on smaller screens.
    */
    max-width: 100vw;
  }
}

/*
Index.css
├── .home-container
│   ├── Size It
│   │   └── max-width
│   ├── Space It
│   │   ├── margin
│   │   └── padding
│   └── Style It
│       └── text-align
├── .home-container h1
│   └── Style It
│       └── color
├── .home-container p
│   └── Space It
│       ├── line-height
│       ├── margin-top
│       └── margin-bottom
├── .home-container img
│   ├── Size It
│   │   ├── max-width
│   │   └── height
│   ├── Space It
│   │   └── margin
│   └── Style It
│       ├── display
│       └── border-radius
├── Touch Styles
│   ├── @media
│       ├── .home-container
│           └── Size It
│               └── max-width
*/
